@model BikeToIt.ViewModels.DestinationDetailViewModel

<!DOCTYPE html>

<header>
    <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
    <script defer
            src="https://maps.googleapis.com/maps/api/js?key=AIzaSyB1yYZxTePNdmAPGIADdqFKYv_eFJzD2e8&callback=initMap"></script>
    <style>
        #map {
            height: 400px;
            width: 100%
        }
        ul {
            font-size: 20px;
        }
    </style>

</header>
<body>
    <div class="container">
        <div class="row ">
            <div class="col-2">
            </div>
            <div class="col-4 bg-light mb-3 p-3">
                <h3>@Model.Name</h3>
                <small class="text-muted">@Model.CategoryName</small><br /><br />
                <span>@Model.Street</span><br />
                <span>@Model.City,</span><span> @Model.State</span><span> @Model.Zipcode</span><br /><br />

                @if (Model.Website != null && Model.Website != "")
                {
                    <p><a href=@Model.Website target="_blank">@Model.Website</a></p>
                }

            </div>

            <div class="col-4 bg-light mb-3 p-3">
                @if (Model.Image != null && Model.Image != "")
                {

                    <img src="~/images/@Model.Image" alt="@Model.Name" style="width: 100%; margin-left: auto; margin-right: auto; display: block;">

                }
            </div>
            <div class="col-2">
            </div>

        </div>
        <div class="row">
            <div class="col-2">
            </div>
            <div class="col-8 bg-light mt-3 p-3" id="map">
               
            </div>
            <div class="col-2">
            </div>
        </div>

        <div class="row">
            <div class="col-2">
            </div>
            <div class="col-8 bg-light mt-3 p-3">
                <p style="font-size:large">@Model.Description</p>
            </div>
            <div class="col-2">
            </div>
        </div>
        <div class="row">
            <div class="col-2">
            </div>
            <div class="col-8 bg-light mt-3 pt-4">
                <ul>
                    <p class="list-inline-item">Amenities: </p>
                    @if (Model.OutdoorSeating == true)
                    {
                        <li class="badge badge-secondary badge-success list-inline-item p-2">Outdoor Seating</li>
                    }
                    @if (Model.BikeRacks == true)
                    {
                        <li class="badge  badge-secondary badge-success list-inline-item p-2">Bike Rack</li>
                    }
                    @if (Model.Restrooms == true)
                    {
                        <li class="badge badge-secondary badge-success list-inline-item p-2">Restrooms</li>
                    }
                    @if (Model.Playground == true)
                    {
                        <li class="badge badge-secondary badge-success list-inline-item p-2">Playground</li>
                    }
                </ul>

            </div>
            <div class="col-2">
            </div>
        </div>
        <div class="row">


            <div class="col-6 mt-3">
                <p><a class="text-success" asp-controller="Trail" asp-action="Detail" asp-route-id="@Model.TrailId"> <--Back to @Model.TrailName</a></p>
            </div>
            <div class="col-6 mt-3">
                @if (User.IsInRole("Admin"))
                {
                    <p class="text-right"><a class="text-success" asp-controller="Destination" asp-action="Edit" asp-route-id="@Model.Id">Edit @Model.Name--></a></p>

                }
            </div>

        </div>
    </div>
    <script type="text/javascript" >

        function initMap() {
            let location = "@Model.Street @Model.City, @Model.State @Model.Zipcode";
            axios.get('https://maps.googleapis.com/maps/api/geocode/json?', {
                params: {
                    address: location,
                    key: "AIzaSyB1yYZxTePNdmAPGIADdqFKYv_eFJzD2e8"
                }

            })
                .then(function (response) {

                    //grab lat & lng & create map and add bike layer

                    let outputLatitude = response.data.results[0].geometry.location.lat;
                    let outputLongitude = response.data.results[0].geometry.location.lng;
                    let options = {
                        center: { lat: outputLatitude, lng: outputLongitude },
                        zoom: 18
                    }

                    let map = new google.maps.Map(document.getElementById("map"), options);



                    let bikeLayer = new google.maps.BicyclingLayer();
                    bikeLayer.setMap(map);
                    
                    console.log(response.data.results[0].formatted_address);
                })
                
                .catch(function(error) {
                    console.log(error);
                })
        }
        
    </script>
    <script ></script>
</body>
